mode: daemonset

presets:
  kubernetesAttributes:
    enabled: true
  kubeletMetrics:
    enabled: true
  hostMetrics:
    enabled: true

# need to add additional permissions to the clusterRole for
# the kubeletstats receiver to work successfully
# reference: https://github.com/signalfx/splunk-otel-collector-chart/blob/main/examples/distribution-eks/rendered_manifests/clusterRole.yaml
clusterRole:
  rules:
  - apiGroups:
      - ""
    resources:
      - events
      - namespaces
      - namespaces/status
      - nodes
      - nodes/spec
      - nodes/stats
      - nodes/proxy
      - pods
      - pods/status
      - persistentvolumeclaims
      - persistentvolumes
      - replicationcontrollers
      - replicationcontrollers/status
      - resourcequotas
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - daemonsets
      - deployments
      - replicasets
      - statefulsets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
    resources:
      - daemonsets
      - deployments
      - replicasets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - batch
    resources:
      - jobs
      - cronjobs
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - autoscaling
    resources:
      - horizontalpodautoscalers
    verbs:
      - get
      - list
      - watch
  - nonResourceURLs:
      - /metrics
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
    resourceNames:
      - aws-auth

extraEnvs:
  - name: SPLUNK_ACCESS_TOKEN
    valueFrom:
      secretKeyRef:
        name: otel-secret
        key: SPLUNK_ACCESS_TOKEN
  - name: SPLUNK_HEC_TOKEN
    valueFrom:
      secretKeyRef:
        name: otel-secret
        key: SPLUNK_HEC_TOKEN
  - name: SPLUNK_TRACE_URL
    valueFrom:
      configMapKeyRef:
        name: otel-configmap
        key: SPLUNK_TRACE_URL
  - name: SPLUNK_API_URL
    valueFrom:
      configMapKeyRef:
        name: otel-configmap
        key: SPLUNK_API_URL
  - name: SPLUNK_INGEST_URL
    valueFrom:
      configMapKeyRef:
        name: otel-configmap
        key: SPLUNK_INGEST_URL
  - name: SPLUNK_HEC_URL
    valueFrom:
      configMapKeyRef:
        name: otel-configmap
        key: SPLUNK_HEC_URL
  - name: K8S_CLUSTER_NAME
    valueFrom:
      configMapKeyRef:
        name: otel-configmap
        key: K8S_CLUSTER_NAME

config:
  extensions:
    k8s_observer:
      auth_type: serviceAccount
      node: ${K8S_NODE_NAME}
  exporters:
    # Logs
    splunk_hec:
      token: "${SPLUNK_HEC_TOKEN}"
      endpoint: "${SPLUNK_HEC_URL}"
      profiling_data_enabled: false
    # Traces
    sapm:
      access_token: "${SPLUNK_ACCESS_TOKEN}"
      endpoint: "${SPLUNK_TRACE_URL}"
    # Metrics + Events
    signalfx:
      access_token: "${SPLUNK_ACCESS_TOKEN}"
      api_url: "${SPLUNK_API_URL}"
      correlation: null
      ingest_url: "${SPLUNK_INGEST_URL}"
      sync_host_metadata: true
  processors:
    filter/logs:
      logs:
        exclude:
          match_type: strict
          resource_attributes:
            - key: splunk.com/exclude
              value: "true"
    groupbyattrs/logs:
      keys:
        - com.splunk.source
        - com.splunk.sourcetype
        - container.id
        - fluent.tag
        - k8s.container.name
        - k8s.namespace.name
        - k8s.pod.name
        - k8s.pod.uid
    k8sattributes:
      extract:
        annotations:
          - from: pod
            key: splunk.com/sourcetype
          - from: namespace
            key: splunk.com/exclude
            tag_name: splunk.com/exclude
          - from: pod
            key: splunk.com/exclude
            tag_name: splunk.com/exclude
          - from: namespace
            key: splunk.com/index
            tag_name: com.splunk.index
          - from: pod
            key: splunk.com/index
            tag_name: com.splunk.index
        labels:
          - key: app
        metadata:
          - k8s.namespace.name
          - k8s.node.name
          - k8s.pod.name
          - k8s.pod.uid
          - container.id
          - container.image.name
          - container.image.tag
      filter:
        node_from_env_var: K8S_NODE_NAME
      pod_association:
        - sources:
            - from: resource_attribute
              name: k8s.pod.uid
        - sources:
            - from: resource_attribute
              name: k8s.pod.ip
        - sources:
            - from: resource_attribute
              name: ip
        - sources:
            - from: connection
        - sources:
            - from: resource_attribute
              name: host.name
    resource:
      attributes:
        - action: insert
          key: k8s.node.name
          value: ${K8S_NODE_NAME}
        - action: upsert
          key: k8s.cluster.name
          value: ${K8S_CLUSTER_NAME}
    resource/add_agent_k8s:
      attributes:
        - action: insert
          key: k8s.pod.name
          value: ${K8S_POD_NAME}
        - action: insert
          key: k8s.pod.uid
          value: ${K8S_POD_UID}
        - action: insert
          key: k8s.namespace.name
          value: ${K8S_NAMESPACE}
    resource/logs:
      attributes:
        - action: upsert
          from_attribute: k8s.pod.annotations.splunk.com/sourcetype
          key: com.splunk.sourcetype
        - action: delete
          key: k8s.pod.annotations.splunk.com/sourcetype
        - action: delete
          key: splunk.com/exclude
    resourcedetection:
      detectors:
        - env
        - ec2
        - system
      override: true
      timeout: 10s
  receivers:
    kubeletstats:
      auth_type: serviceAccount
      collection_interval: 10s
      endpoint: ${K8S_NODE_NAME}:10250
      extra_metadata_labels:
        - container.id
      metric_groups:
        - container
        - pod
        - node
    receiver_creator:
      receivers: null
      watch_observers:
        - k8s_observer
  service:
    extensions: [health_check, k8s_observer, memory_ballast]
    pipelines:
      traces:
        exporters: [sapm, signalfx]
      metrics:
        receivers: [otlp, prometheus, hostmetrics, kubeletstats, receiver_creator]
        processors: [k8sattributes, memory_limiter, batch, resourcedetection, resource, resource/add_agent_k8s]
        exporters: [signalfx]
#      logs:
#        exporters: [splunk_hec]
