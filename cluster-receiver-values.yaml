mode: deployment

presets:
  clusterMetrics:
    enabled: true

extraEnvs:
  - name: SPLUNK_ACCESS_TOKEN
    valueFrom:
      secretKeyRef:
        name: otel-secret
        key: SPLUNK_ACCESS_TOKEN
  - name: SPLUNK_TRACE_URL
    valueFrom:
      configMapKeyRef:
        name: otel-configmap
        key: SPLUNK_TRACE_URL
  - name: SPLUNK_API_URL
    valueFrom:
      configMapKeyRef:
        name: otel-configmap
        key: SPLUNK_API_URL
  - name: SPLUNK_INGEST_URL
    valueFrom:
      configMapKeyRef:
        name: otel-configmap
        key: SPLUNK_INGEST_URL

config:
  receivers:
    jaeger: null
    otlp: null
    zipkin: null
    k8s_cluster:
      auth_type: serviceAccount
      metadata_exporters:
        - signalfx
    prometheus/k8s-api-server:
      config:
        scrape_configs:
          - authorization:
              credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token
            job_name: api-server-metrics
            metric_relabel_configs:
              - action: keep
                regex: (apiserver_request_total|etcd_db_total_size_in_bytes|apiserver_storage_objects)
                source_labels:
                  - __name__
            scheme: https
            scrape_interval: 120s
            static_configs:
              - targets:
                  - ${KUBERNETES_SERVICE_HOST}:443
            tls_config:
              ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    prometheus/k8s_cluster_receiver:
      config:
        scrape_configs:
          - job_name: otel-k8s-cluster-receiver
            scrape_interval: 10s
            static_configs:
              - targets:
                  - ${K8S_POD_IP}:8889
  processors:
    resource:
      attributes:
        - action: insert
          key: metric_source
          value: kubernetes
        - action: upsert
          key: k8s.cluster.name
          value: ${K8S_CLUSTER_NAME}
    resource/add_collector_k8s:
      attributes:
        - action: insert
          key: k8s.node.name
          value: ${K8S_NODE_NAME}
        - action: insert
          key: k8s.pod.name
          value: ${K8S_POD_NAME}
        - action: insert
          key: k8s.pod.uid
          value: ${K8S_POD_UID}
        - action: insert
          key: k8s.namespace.name
          value: ${K8S_NAMESPACE}
    resource/k8s_cluster:
      attributes:
        - action: insert
          key: receiver
          value: k8scluster
    resourcedetection:
      detectors:
        - env
        - ec2
        - system
      override: true
      timeout: 10s
  exporters:
    logging: null
    # Metrics + Events
    signalfx:
      access_token: "${SPLUNK_ACCESS_TOKEN}"
      api_url: "${SPLUNK_API_URL}"
      ingest_url: "${SPLUNK_INGEST_URL}"
  service:
    pipelines:
      traces: null
      logs: null
      metrics:
        receivers: [k8s_cluster, prometheus/k8s-api-server]
        processors: [memory_limiter, batch, resource, resource/k8s_cluster]
        exporters: [signalfx]
      metrics/collector:
        receivers: [prometheus/k8s_cluster_receiver]
        processors: [memory_limiter, batch, resource/add_collector_k8s, resourcedetection, resource]
        exporters: [signalfx]